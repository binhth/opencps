/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.holidayconfig.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.holidayconfig.model.HolidayConfig;
import org.opencps.holidayconfig.model.HolidayConfigModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the HolidayConfig service. Represents a row in the &quot;opencps_holidayconfig&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.holidayconfig.model.HolidayConfigModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HolidayConfigImpl}.
 * </p>
 *
 * @author nhanhoang
 * @see HolidayConfigImpl
 * @see org.opencps.holidayconfig.model.HolidayConfig
 * @see org.opencps.holidayconfig.model.HolidayConfigModel
 * @generated
 */
public class HolidayConfigModelImpl extends BaseModelImpl<HolidayConfig>
	implements HolidayConfigModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a holiday config model instance should use the {@link org.opencps.holidayconfig.model.HolidayConfig} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_holidayconfig";
	public static final Object[][] TABLE_COLUMNS = {
			{ "holidayId", Types.BIGINT },
			{ "holiday", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "description", Types.VARCHAR },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "status", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_holidayconfig (holidayId LONG not null primary key,holiday DATE null,companyId LONG,groupId LONG,userId LONG,description VARCHAR(75) null,createdDate DATE null,modifiedDate DATE null,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_holidayconfig";
	public static final String ORDER_BY_JPQL = " ORDER BY holidayConfig.holidayId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_holidayconfig.holidayId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.holidayconfig.model.HolidayConfig"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.holidayconfig.model.HolidayConfig"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.holidayconfig.model.HolidayConfig"),
			true);
	public static long HOLIDAY_COLUMN_BITMASK = 1L;
	public static long HOLIDAYID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.holidayconfig.model.HolidayConfig"));

	public HolidayConfigModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _holidayId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setHolidayId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _holidayId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return HolidayConfig.class;
	}

	@Override
	public String getModelClassName() {
		return HolidayConfig.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("holidayId", getHolidayId());
		attributes.put("holiday", getHoliday());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("description", getDescription());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("status", getStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long holidayId = (Long)attributes.get("holidayId");

		if (holidayId != null) {
			setHolidayId(holidayId);
		}

		Date holiday = (Date)attributes.get("holiday");

		if (holiday != null) {
			setHoliday(holiday);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@Override
	public long getHolidayId() {
		return _holidayId;
	}

	@Override
	public void setHolidayId(long holidayId) {
		_columnBitmask = -1L;

		_holidayId = holidayId;
	}

	@Override
	public Date getHoliday() {
		return _holiday;
	}

	@Override
	public void setHoliday(Date holiday) {
		_columnBitmask |= HOLIDAY_COLUMN_BITMASK;

		if (_originalHoliday == null) {
			_originalHoliday = _holiday;
		}

		_holiday = holiday;
	}

	public Date getOriginalHoliday() {
		return _originalHoliday;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			HolidayConfig.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public HolidayConfig toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (HolidayConfig)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HolidayConfigImpl holidayConfigImpl = new HolidayConfigImpl();

		holidayConfigImpl.setHolidayId(getHolidayId());
		holidayConfigImpl.setHoliday(getHoliday());
		holidayConfigImpl.setCompanyId(getCompanyId());
		holidayConfigImpl.setGroupId(getGroupId());
		holidayConfigImpl.setUserId(getUserId());
		holidayConfigImpl.setDescription(getDescription());
		holidayConfigImpl.setCreatedDate(getCreatedDate());
		holidayConfigImpl.setModifiedDate(getModifiedDate());
		holidayConfigImpl.setStatus(getStatus());

		holidayConfigImpl.resetOriginalValues();

		return holidayConfigImpl;
	}

	@Override
	public int compareTo(HolidayConfig holidayConfig) {
		int value = 0;

		if (getHolidayId() < holidayConfig.getHolidayId()) {
			value = -1;
		}
		else if (getHolidayId() > holidayConfig.getHolidayId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof HolidayConfig)) {
			return false;
		}

		HolidayConfig holidayConfig = (HolidayConfig)obj;

		long primaryKey = holidayConfig.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		HolidayConfigModelImpl holidayConfigModelImpl = this;

		holidayConfigModelImpl._originalHoliday = holidayConfigModelImpl._holiday;

		holidayConfigModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<HolidayConfig> toCacheModel() {
		HolidayConfigCacheModel holidayConfigCacheModel = new HolidayConfigCacheModel();

		holidayConfigCacheModel.holidayId = getHolidayId();

		Date holiday = getHoliday();

		if (holiday != null) {
			holidayConfigCacheModel.holiday = holiday.getTime();
		}
		else {
			holidayConfigCacheModel.holiday = Long.MIN_VALUE;
		}

		holidayConfigCacheModel.companyId = getCompanyId();

		holidayConfigCacheModel.groupId = getGroupId();

		holidayConfigCacheModel.userId = getUserId();

		holidayConfigCacheModel.description = getDescription();

		String description = holidayConfigCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			holidayConfigCacheModel.description = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			holidayConfigCacheModel.createdDate = createdDate.getTime();
		}
		else {
			holidayConfigCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			holidayConfigCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			holidayConfigCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		holidayConfigCacheModel.status = getStatus();

		return holidayConfigCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{holidayId=");
		sb.append(getHolidayId());
		sb.append(", holiday=");
		sb.append(getHoliday());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("org.opencps.holidayconfig.model.HolidayConfig");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>holidayId</column-name><column-value><![CDATA[");
		sb.append(getHolidayId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>holiday</column-name><column-value><![CDATA[");
		sb.append(getHoliday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = HolidayConfig.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			HolidayConfig.class
		};
	private long _holidayId;
	private Date _holiday;
	private Date _originalHoliday;
	private long _companyId;
	private long _groupId;
	private long _userId;
	private String _userUuid;
	private String _description;
	private Date _createdDate;
	private Date _modifiedDate;
	private int _status;
	private long _columnBitmask;
	private HolidayConfig _escapedModel;
}